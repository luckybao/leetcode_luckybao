Search in Rotated Sorted Array II Total Accepted: 14581 Total Submissions: 47599 My Submissions
Follow up for "Search in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?

Write a function to determine if a given target is in the array.

public class Solution {//run time will be O(n), we just need to filter out all duplicates
    public boolean search(int[] A, int target) {
        if(A.length==0)return false;
        int l=0,r=A.length-1,mid;
        while(l<=r&&A[l]==A[r]){//filter out all duplicates
            if(A[l]==target)return true;
            else {l++;r--;}}
            while(l<r){
                mid=(l+r)/2;
                if(target==A[mid]||target==A[l]||target==A[r])return true;
                else if(target<A[mid]){
                    if(A[l]>A[mid])r=mid-1;//rotated in left
                    else if(target>A[l]) r=mid-1;//rotated in right
                    else l=mid+1;
                }else{
                    if(A[l]>A[mid]){
                        if(target>A[r])r=mid-1;
                        else l=mid+1;
                    }//rotated in left
                    else l=mid+1;//rotated in right
                }
            }
    return false;}
}
