Interleaving String Total Accepted: 12189 Total Submissions: 64082 My Submissions
Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.

For example,
Given:
s1 = "aabcc",
s2 = "dbbca",

When s3 = "aadbbcbcac", return true.
When s3 = "aadbbbaccc", return false.

public class Solution {//dp, O(n^2) time, O(n)space 
//for dp[i][j] means s3.substring(0,i+j+2) is interleaving of s1.substring(0,i+1) and s2.substring(0,j+1), be careful about the substring index
    public boolean isInterleave(String s1, String s2, String s3) {
       if(s1.length()==0){if(s3.equals(s2))return true;else return false;}
       if(s2.length()==0){if(s3.equals(s1))return true;else return false;}
       if(s3.length()!=s1.length()+s2.length())return false;
       boolean[] match=new boolean[s1.length()+1];
       match[0]=true;
       for(int i=0;i<s1.length();i++){
           match[i+1]=match[i]&&(s3.charAt(i)==s1.charAt(i));
           if(!match[i+1])break;//since after are all false
       }
       for(int j=0;j<s2.length();j++){
           match[0]=match[0]&&(s3.charAt(j)==s2.charAt(j));
           for(int i=0;i<s1.length();i++){
               match[i+1]=(match[i]&&s1.charAt(i)==s3.charAt(i+j+1))||
               (match[i+1]&&s2.charAt(j)==s3.charAt(i+j+1));
           }
       }
    return match[s1.length()];}
}
