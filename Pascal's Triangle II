Pascal's Triangle II Total Accepted: 13339 Total Submissions: 44095 My Submissions
Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?

public class Solution {//in place replace
    public List<Integer> getRow(int rowIndex) {//inplace method, calculate from backward,array manipulation!!!
        List<Integer> row=new ArrayList<Integer>();
        row.add(0,1);
   for (int i=0; i<=rowIndex; ++i) {   
     row.set(0,1);
     for (int j=i; j>0; --j) {   
    int num = row.get(j-1);
       if (j<i) {num += row.get(j); 
       row.set(j,num);}//attention for overflow!  
       else row.add(i,num);//j==i
     }  
   }  
   return row;  
 }  
}
