Integer to Roman Total Accepted: 9051 Total Submissions: 27841 My Submissions
Given an integer, convert it to a roman numeral.

Input is guaranteed to be within the range from 1 to 3999.

public class Solution {
    public String intToRoman(int num) {
        int[] number={1000,900,500,400,100,90,50,40,10,9,5,4,1};
        String[] roman={"M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I"};
        StringBuilder result=new StringBuilder();
        while(num>0){
            for(int i=0;i<number.length;i++){
                while(num/number[i]>=1){result.append(roman[i]);
                num-=number[i];}
            }
        }
    return result.toString();//!!!because of StringBuilder
        
    }
}
//Solution two, with two loop instead of three
class Solution {
    public String intToRoman(int num) {
        int[] number={1000,900,500,400,100,90,50,40,10,9,5,4,1};
        String[] roman={"M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I"};
        int i = 0;
        StringBuilder res = new StringBuilder();
        while(num > 0){
            while(i<number.length){
                if(num/number[i]==0)i++;
                else{
                    res.append(roman[i]);
                    num = num - number[i];                    
                }
            }
       }
    return res.toString();}
}

Python:
class Solution:
    def intToRoman(self, num):
        """
        :type num: int
        :rtype: str
        """
        values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]
        numerals = [ "M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"]
        list = ''
        for i in range(0, len(values)):
            while num >= values[i]:
                num -= values[i]
                list += numerals[i]
        return list
