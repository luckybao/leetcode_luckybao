Find Minimum in Rotated Sorted Array II Total Accepted: 405 Total Submissions: 2216 My Submissions Question Solution 
Follow up for "Find Minimum in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

The array may contain duplicates.
public class Solution {// the time complexity should be O (n) since there are duplicates
    public int findMin(int[] num) {
        if(num.length==0)return Integer.MIN_VALUE;
        if(num.length==1)return num[0];
      int res=Integer.MAX_VALUE;
        for(int i=0;i<num.length;i++){
            if(num[i]<res)res=num[i];
        }
    return res;}
}
