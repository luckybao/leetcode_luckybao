Contains Duplicate III Total Accepted: 6306 Total Submissions: 41331 My Submissions Question Solution 
Given an array of integers, find out whether there are two distinct indices i and j in the array such that the difference between nums[i] and nums[j] is at most t and the difference between i and j is at most k.

public class Solution {//treeset, sortedset
    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {
        TreeSet<Integer> set=new TreeSet<>();
        for(int i=0;i<nums.length;i++){
            int tmp=nums[i];
            if((set.floor(tmp) != null && tmp <= set.floor(tmp) + t)
		|| (set.ceiling(tmp) != null && tmp >= set.ceiling(tmp) -t))return true;
		set.add(tmp);
		if(i-k>=0)
		set.remove(nums[i-k]);
        }
    return false;}
}
