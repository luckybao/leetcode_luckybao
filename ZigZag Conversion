ZigZag Conversion Total Accepted: 11163 Total Submissions: 47009 My Submissions
The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"
Write the code that will take a string and make this conversion given a number of rows:

string convert(string text, int nRows);
convert("PAYPALISHIRING", 3) should return "PAHNAPLSIIGYIR".

public class Solution {//did not understand at first
// logic:there is 2*nRows-2 difference between every two columns(same row). only the first and last row are different since there will be a lot of empty spots. add row by row, first add columns going downward, then add columns going upward
    public String convert(String s, int nRows) {
         if(s == null || s.length()==0 || nRows <=0)  
        return "";  
    if(nRows == 1||nRows>=s.length())  
        return s; 
        StringBuilder ss=new StringBuilder();
        int size=2*nRows-2;
        for(int i=0;i<nRows;i++){
            for(int j=i;j<s.length();j+=size){
                ss.append(s.charAt(j));
                if(i!=0&&i!=nRows-1&&j+size-2*i<s.length())
                ss.append(s.charAt(j+size-2*i));
            }
        }
    return ss.toString();}
}

Python:
class Solution:
    def convert(self, s, numRows):
        """
        :type s: str
        :type numRows: int
        :rtype: str
        """
        if numRows == 1 or numRows >= len(s):
            return s
        zigzag = [[] for x in range(numRows)]
        row, step = 0, 1
        for c in s:
            zigzag[row] += c,
            if row == 0:
                step = 1
            elif row == numRows - 1:
                step = -1
            row += step
        #return ''.join(functools.reduce(operator.add, zigzag))
        result = []
        for x in range(numRows):
            result = operator.add(result, zigzag[x])
            x+=1
        return ''.join(result)
