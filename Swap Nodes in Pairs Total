Swap Nodes in Pairs Total Accepted: 13887 Total Submissions: 43551 My Submissions
Given a linked list, swap every two adjacent nodes and return its head.

For example,
Given 1->2->3->4, you should return the list as 2->1->4->3.

Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode swapPairs(ListNode head) {
        ListNode dummynode=new ListNode(0);
        ListNode cur=dummynode;
        dummynode.next=head;
        while(cur.next!=null&&cur.next.next!=null){//!!!logic! null pointer for cur.next.next.next!!!
            ListNode temp=cur.next;
            cur.next=cur.next.next;
            cur=cur.next;
            temp.next=cur.next;
            cur.next=temp;
            cur=cur.next;
        }
            return dummynode.next;
    }
}
