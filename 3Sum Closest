3Sum Closest Total Accepted: 13754 Total Submissions: 50852 My Submissions
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
    
    public class Solution {
    public int threeSumClosest(int[] num, int target) {//O(n^2) time, O(1)space
    //one cursor (i) from begin to end, other two iterate through (n-i)
        if(num.length<3)return Integer.MAX_VALUE;
        Arrays.sort(num);
        int csum=num[0]+num[1]+num[2];
        int dif=Math.abs(csum-target);
        for(int i=0;i<num.length;i++){
            int begin=i+1,end=num.length-1;
            while(begin<end){
            int sum=num[i]+num[begin]+num[end];
            if(dif>Math.abs(target-sum)){
                dif=Math.abs(target-sum);
                csum=sum;
            }
            if(sum<target){
                begin++;
            }else {
                end--;
            }
             
            }
        }
    return csum;}
}
