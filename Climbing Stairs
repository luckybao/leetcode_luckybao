Climbing Stairs Total Accepted: 14638 Total Submissions: 44621 My Submissions
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

public class Solution {//DP, O(n)space, O(n)time
    public int climbStairs(int n) {
        if(n==0||n==1) return 1;
        else{
        int[] ways=new int[n];
        ways[0]=1;ways[1]=2;
            for(int i=2;i<n;i++){
                ways[i]=ways[i-1]+ways[i-2];
            }
        return ways[n-1];}
        }
}
//running time is same as before but it only uses O(1) space
public class Solution {
    public int climbStairs(int n) {
        if(n==0||n==1) return 1;
        else{
            int p1=1,p2=1;
            for(int i=2;i<=n;i++){
                int temp;
                temp=p2;
                p2=p2+p1;
                p1=temp;
            }
        return p2;}
        }
}
