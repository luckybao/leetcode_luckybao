Gray Code Total Accepted: 12806 Total Submissions: 40177 My Submissions
The gray code is a binary numeral system where two successive values differ in only one bit.

Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.

For example, given n = 2, return [0,1,3,2]. Its gray code sequence is:

00 - 0
01 - 1
11 - 3
10 - 2
Note:
For a given n, a gray code sequence is not uniquely defined.

For example, [0,2,3,1] is also a valid gray code sequence according to the above definition.

For now, the judge is able to judge based on one instance of gray code sequence. Sorry about that.

public class Solution {// this is fastest solution I found, use "pre" to store the previous result, every time result 
//add others from "pre"(back till front), plus 1<<(i-1) in the front, cannot do it by plus "1" at the end, since it may 
// involve carrier!!!
    public List<Integer> grayCode(int n) {
        List<Integer> result=new ArrayList<Integer>();
        if(n==0) {result.add(0); 
        return result;}
        List<Integer> pre=new ArrayList<Integer>();
        pre.add(0);pre.add(1);
        if(n==1)return pre;
        result=pre;
        for(int i=2;i<=n;i++){
                for(int j=pre.size()-1;j>=0;j--){
                    int num=pre.get(j);
                    num+=1<<(i-1);
                    result.add(num);
                }
                pre=result;
        }
       return result;}
}
