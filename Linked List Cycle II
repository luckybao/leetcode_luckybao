Linked List Cycle II Total Accepted: 17741 Total Submissions: 57780 My Submissions
Given a linked list, return the node where the cycle begins. If there is no cycle, return null.

/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if(head==null||head.next==null) return null;
        ListNode slow, fast;
        slow=head;
        fast=head;
            while(fast!=null&&fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
                if(slow==fast)break;
            }
if(fast==null||fast.next==null)return null;
fast=head;
while(slow!=fast){
    slow=slow.next;
    fast=fast.next;
}
    return slow;}
}
