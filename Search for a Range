Search for a Range Total Accepted: 17052 Total Submissions: 62218 My Submissions
Given a sorted array of integers, find the starting and ending position of a given target value.

Your algorithm's runtime complexity must be in the order of O(log n).

If the target is not found in the array, return [-1, -1].

For example,
Given [5, 7, 7, 8, 8, 10] and target value 8,
return [3, 4].

public class Solution {
    public int[] searchRange(int[] A, int target) {
        int[] result=new int[]{-1,-1};
        if(A.length==0)return result;
        int l,r,mid;
        l=0;r=A.length-1;
        while(l<=r){
            mid=(l+r)/2;
            if(target>A[r]||target<A[l])return result;
            if(target==A[l]&&A[l]==A[r]){
                result[0]=l;
                result[1]=r;
                return result;
            }
            if(target>=A[l]&&A[mid]>target){
                r=mid-1;
            }
            else if(A[mid]==target){
                if(A[l]<target)l++;
                if(A[r]>target)r--;
            }
            else if(target<=A[r]&&A[mid]<target){
                l=mid+1;
            }
        }
    return result;}
}
