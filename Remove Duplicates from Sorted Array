Remove Duplicates from Sorted Array Total Accepted: 16340 Total Submissions: 51302 My Submissions
Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.

Do not allocate extra space for another array, you must do this in place with constant memory.

For example,
Given input array A = [1,1,2],

Your function should return length = 2, and A is now [1,2].


public class Solution {
    public int removeDuplicates(int[] A) {//logic!!!!we only need to test the one right before the current one which is not possible to have been overwritten
        if(A.length==0)return 0;
        if(A.length==1)return 1;
        int count=0,i;
        for(i=1;i<A.length;i++){
           if(A[i]==A[i-1-count]){
               count++;}
           else{A[i-count]=A[i];}
        }
        
    return A.length-count;}
}


Python 3:
class Solution:
    def removeDuplicates(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if len(nums)<=1 : return len(nums)
        count = 0
        i = 0
        while i < (len(nums)):
            if nums[i] != nums[count]:
                count +=1
                nums[i], nums[count] = nums[count], nums[i]
            i+=1
        return count+1
