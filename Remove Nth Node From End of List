Remove Nth Node From End of List Total Accepted: 19405 Total Submissions: 65159 My Submissions
Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:
Given n will always be valid.
Try to do this in one pass.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {// one pass, has two pointers, distance is n, move together till end, then remove begin.next
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(n==0||head==null) return head;
        ListNode begin, end;
        ListNode dummy=new ListNode(0);
        dummy.next=head;
        begin=dummy;
        end=head;
        int i=1;
        while(end.next!=null&&i<n){
            end=end.next;
            i++;
        }
        while(end.next!=null){
            begin=begin.next;
            end=end.next;
        }
        begin.next=begin.next.next;
    return dummy.next;}
}
