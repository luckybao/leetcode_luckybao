Happy Number Total Accepted: 17536 Total Submissions: 55839 My Submissions Question Solution 
Write an algorithm to determine if a number is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

Example: 19 is a happy number

12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1

public class Solution {
    public boolean isHappy(int n) {
        if(n<=0)return false;
        HashMap<Integer, Boolean> map=new HashMap<>();
        while(n!=1){
            if(map.containsKey(n))return false;
            map.put(n,true);
            int nn=squresum(digits(n));
            n=nn;
        }
    return true;}
    private int[] digits(int n){
        int[] res=new int[String.valueOf(n).length()];//!!! learn how to count how many digits!
        for(int i=0;i<res.length;i++){
            res[i]=n%10;
            n/=10;
        }
    return res;}
    private int squresum(int[] digits){
        int res=0,l=digits.length;
        for(int i=0;i<l;i++){
            res+=digits[i]*digits[i];
        }
    return res;}
}
