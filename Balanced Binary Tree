Balanced Binary Tree Total Accepted: 15306 Total Submissions: 47716 My Submissions
Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 //recursion
public class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root==null) return true;
        if((Math.abs(height(root.left)-height(root.right))<=1)&&(isBalanced(root.left))&&(isBalanced(root.right)))
        return true;
    else return false; }
    public int height(TreeNode node){
        if(node==null) return 0;
        return Math.max(height(node.left),height(node.right))+1;
        
    }
}
