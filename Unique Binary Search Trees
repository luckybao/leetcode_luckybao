Given n, how many structurally unique BST's (binary search trees) that store values 1...n?

For example,
Given n = 3, there are a total of 5 unique BST's.

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3
   
   //LOGIC: DP, FOR 1..N, IF ROOT IS I, LEFT(1,I-1),RIGHT(I+1,N)
   public class Solution {
    public int numTrees(int n) {
        int number=0;
        if(n==1||n==0)number=1;
    else{
        for(int i=0;i<n;i++)
        number+=numTrees(i)*numTrees(n-i-1);
    }
        return number;
    }
}
